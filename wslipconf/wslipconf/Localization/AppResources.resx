<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddRule" xml:space="preserve">
    <value>Add Rule</value>
  </data>
  <data name="ApplyRules" xml:space="preserve">
    <value>Apply Rules</value>
  </data>
  <data name="AutoApply" xml:space="preserve">
    <value>Auto Apply Changes</value>
  </data>
  <data name="AutoDest" xml:space="preserve">
    <value>Automatic WSL Destination</value>
  </data>
  <data name="AutoIPX" xml:space="preserve">
    <value>Auto IP: {0}</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ClearRules" xml:space="preserve">
    <value>Clear Rules</value>
  </data>
  <data name="ConfirmClearRules" xml:space="preserve">
    <value>Are you sure you want to clear all rules?</value>
  </data>
  <data name="ConfirmReloadRules" xml:space="preserve">
    <value>Are you sure you want to reload the rules?
Unsaved changes will be discarded.</value>
  </data>
  <data name="ConfirmRemoveRules" xml:space="preserve">
    <value>Are you sure you want to remove the selected rules?</value>
  </data>
  <data name="CopyIPAddress" xml:space="preserve">
    <value>Copy IP Address</value>
  </data>
  <data name="DeleteRule" xml:space="preserve">
    <value>Delete Selected Rules</value>
  </data>
  <data name="DestinationAddress" xml:space="preserve">
    <value>Destination Address</value>
  </data>
  <data name="DestinationPort" xml:space="preserve">
    <value>Destination Port</value>
  </data>
  <data name="EditRule" xml:space="preserve">
    <value>Edit Rule</value>
  </data>
  <data name="EditRules" xml:space="preserve">
    <value>Edit Rules</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorApplying" xml:space="preserve">
    <value>Error applying rules!</value>
  </data>
  <data name="ErrorCannotSave" xml:space="preserve">
    <value>There are errors on the page and the item cannot be saved!</value>
  </data>
  <data name="ErrorFieldBlank" xml:space="preserve">
    <value>This field cannot be blank.</value>
  </data>
  <data name="ErrorInvalidFormat" xml:space="preserve">
    <value>This value for this field is in an incorrect format.</value>
  </data>
  <data name="ErrorInvalidValue" xml:space="preserve">
    <value>The value for this field is invalid.</value>
  </data>
  <data name="GetCurrentRules" xml:space="preserve">
    <value>Get Current Rules</value>
  </data>
  <data name="IconTip" xml:space="preserve">
    <value>Current WSL IP Address: {1}</value>
  </data>
  <data name="IPAddressCopied" xml:space="preserve">
    <value>IP Address Copied!</value>
  </data>
  <data name="MainTitle" xml:space="preserve">
    <value>WSL Port Binding Tool</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewRuleDefinition" xml:space="preserve">
    <value>New Rule Definition</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Protocol" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="ProxyType" xml:space="preserve">
    <value>Proxy Type</value>
  </data>
  <data name="Quit" xml:space="preserve">
    <value>Quit</value>
  </data>
  <data name="RefreshAndApply" xml:space="preserve">
    <value>Refresh and Apply</value>
  </data>
  <data name="RefreshIP" xml:space="preserve">
    <value>Refresh IP</value>
  </data>
  <data name="RefreshWSLIP" xml:space="preserve">
    <value>Refresh WSL IP Address</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="Rerun" xml:space="preserve">
    <value>Re-Apply Rules</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="RulesApplied" xml:space="preserve">
    <value>Rules applied successfully!</value>
  </data>
  <data name="RunOnStartup" xml:space="preserve">
    <value>Run On Startup</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ShowWindow" xml:space="preserve">
    <value>Show Window</value>
  </data>
  <data name="SourceAddress" xml:space="preserve">
    <value>Source Address</value>
  </data>
  <data name="SourcePort" xml:space="preserve">
    <value>Source Port</value>
  </data>
  <data name="Tcp" xml:space="preserve">
    <value>Tcp</value>
  </data>
  <data name="Udp" xml:space="preserve">
    <value>Udp</value>
  </data>
  <data name="WSLAddress" xml:space="preserve">
    <value>Detected WSL IP Address</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="wslip" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\wslip.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>